//jshint esversion:6

const express= require("express");
const https= require("https");
const bodyParser= require("body-parser");
const request= require("request");
const { query, response }= require("express");
require('dotenv').config(); //for security of API key
const path = require('path');
const router = express.Router();
const countries= require("i18n-iso-countries"); // for converting country code to full name
// const { url } = require("inspector");
// const { request } = require("http");
countries.registerLocale(require("i18n-iso-countries/langs/en.json")); // minimizing the file size by specifying the language

const app=express();

app.set("view engine", "ejs"); // this tells the app generated by express to use ejs as its view engine - refer to the docs

// for encoding the data
app.use(bodyParser.urlencoded({extended:true})); // when the data is rendered from html file then the body parser requires this piece of code
app.use(express.static(__dirname + '/public')); // used for css files

app.get("/", function(req,res){
    res.sendFile(__dirname+"/index.html"); 
});

const apiKey= process.env.OPEN_WEATHER_API_KEY

app.get('/weather',function(req,res){
    res.sendFile(__dirname+'/weather.html');
});

app.get('/air-quality',function(req,res){
    res.sendFile(__dirname+'/air-quality.html');
});

app.post("/air-quality", function(req,res){
        request("http://api.openweathermap.org/data/2.5/air_pollution?lat=50&lon=50&appid="+ apiKey +"", function(error, response, body){

            // to get the json response in the console
            var dataAPI=JSON.parse(response.body);
            console.log(dataAPI);
        });
        const queryInput= req.body.cityName;
        const lat= weatherData.coord.lat;
        const lon= weatherData.coord.lon;
        const url= "http://api.openweathermap.org/data/2.5/air_pollution/forecast?lat="+ lat +"&lon="+ lon +"&appid="+ apiKey +"";
        https.get(url, function(response){
            console.log(response.statusCode); // to get the status code in the terminal
            // while using the api call response data {https://openweathermap.org/api/air-pollution#descr}
            response.on("data", function(data){
                const airQuality= JSON.parse(data);
                const airQualityIndex= airQuality.list[0].main.aqi;
                const dt= airQuality.list[0].dt;
                const co= airQuality.list[0].components.co;
                const no= airQuality.list[0].components.no
                const no2= airQuality.list[0].components.no2;
                const o3= airQuality.list[0].components.o3;
                const so2= airQuality.list[0].components.so2;
                const pm2_5= airQuality.list[0].components.pm2_5;
                const pm10= airQuality.list[0].components.pm10;
                const nh3= airQuality.list[0].components.nh3;
                
                const query = queryInput.charAt(0).toUpperCase() + queryInput.slice(1);

                // for getting the northern/southern hemisphere
                var verticalHemisphere="";
                if(lat>=0)   verticalHemisphere="°N in Northern";
                else    verticalHemisphere="°S in Southern";

                // for getting the western/eastern hemisphere
                var horizontalHemisphere="";
                if(lon>=0)   horizontalHemisphere="°E in Eastern";
                else    horizontalHemisphere="°W in Western";

                // cloudy description
                var airDesc="";
                if(airQualityIndex==1) airDesc="Good:  No health implications.";
                else if(airQualityIndex==2)   airDesc="Fair:  Some pollutants might arouse modest health concern for hypersensitive people.";
                else if(airQualityIndex==3)   airDesc="Moderate:  Healthy people may experience slight irritations, and sensitive individuals will be slightly affected to a larger extent.";
                else if(airQualityIndex==4)   airDesc="Poor:  People should moderately reduce outdoor activities, they may develop heart & respiratory problems.";
                else if(airQualityIndex==5)   airDesc="Very Poor: Serious health implications";

                // to convert country abbreviation code to full country name
                // var countryFullName= countries.getName(""+ countryCode +"", "en", {select: "official"});

                res.render('output-airQuality',{city: query, airQlt: airQualityIndex, date: dt, coLevel: co,
                    noLevel: no, latitute: lat, longitude: lon, no2Level: no2, o3Level: o3, so2Level: so2,
                    fineParticles: pm2_5, coarseParticles: pm10, nh3Level: nh3, vH: verticalHemisphere, 
                    hH: horizontalHemisphere, airDescription: airDesc});   // sending all info related to different fields to the output-airQuality.ejs

                res.end();


            });
        });
});

app.post("/weather",function(req,res){
        request("https://api.openweathermap.org/data/2.5/weather?id=2172797&appid="+ apiKey +"", function(error, response, body){
            
            // to receive the api response in the JSON Format
            var dataAPI=JSON.parse(response.body);
            console.log(dataAPI);

        });
        const queryInput= req.body.cityName;
        const units= "metric";
        const url= "https://api.openweathermap.org/data/2.5/weather?q="+ queryInput +"&appid="+ apiKey +"&units="+ units +"";
        https.get(url, function(response){
            console.log(response.statusCode); // to get the status code in the terminal
            // while using the api call response data
            response.on("data", function(data){
                const weatherData= JSON.parse(data);
                const temp= weatherData.main.temp;
                const weatherDescription= weatherData.weather[0].description;
                const icon= weatherData.weather[0].icon;
                const imageUrl= "http://openweathermap.org/img/wn/" + icon + "@2x.png"; // to get the image related to the weather
                const maxTemp= weatherData.main.temp_max; // max current temperature of the city
                const lat= weatherData.coord.lat; // the latitude of the city
                const lon= weatherData.coord.lon; // the longitude of the city
                const hum= weatherData.main.humidity; // humidity percentage
                var visi= weatherData.visibility; // visibility in the air                 (it may show the same value, but i have checked and it shows different values based on time and place)
                visi= visi/100;  // converting from meters to kilometers 
                const clouds= weatherData.clouds.all;  // the percentage of cloudiness

                const countryCode=weatherData.sys.country;

                // for getting the northern/southern hemisphere
                var verticalHemisphere="";
                if(lat>=0)   verticalHemisphere="°N in Northern";
                else    verticalHemisphere="°S in Southern";

                // for getting the western/eastern hemisphere
                var horizontalHemisphere="";
                if(lon>=0)   horizontalHemisphere="°E in Eastern";
                else    horizontalHemisphere="°W in Western";

                // cloudy description
                var cloudyDesc="";
                if(clouds>=0 && clouds<=10) cloudyDesc="Sunny";
                else if(clouds>=11 && clouds<=19)   cloudyDesc="Fair";
                else if(clouds>=20 && clouds<=29)   cloudyDesc="Mostly sunny";
                else if(clouds>=30 && clouds<=59)   cloudyDesc="Partly cloudy";
                else if(clouds>=60 && clouds<=69)   cloudyDesc="Partly sunny";
                else if(clouds>=70 && clouds<=89)   cloudyDesc="Mostly Cloudy";
                else if(clouds>=90 && clouds<=100)  cloudyDesc="Overcast";

                //comfortability check based on humidity
                var comfort="";
                if(hum<=55) comfort="dry & comfortable";
                else if(hum>=56 && hum<=64) comfort="sticky with muggy evenings";
                else if(hum>=65) comfort="oppresive moisture";

                const query = queryInput.charAt(0).toUpperCase() + queryInput.slice(1); // capitalising the first letter of the entered query
                
                // to convert country abbreviation code to full country name
                var countryFullName= countries.getName(""+ countryCode +"", "en", {select: "official"});

                res.render('output-weather',{city: query, temperature: temp, description: weatherDescription, image: imageUrl,
                                             maxTemperature: maxTemp, latitute: lat, longitude: lon, humidity: hum,
                                             visibility: visi, cloudiness: clouds, cloudDesc: cloudyDesc, countryName: countryFullName, 
                                             vH: verticalHemisphere, hH: horizontalHemisphere, comfortLevel: comfort});   // sending additional info related to different fields

                res.end();
            });

        });
});

app.listen(5000 || process.env.PORT ,function(req,res){
    console.log("server is running at port 5000");
});

